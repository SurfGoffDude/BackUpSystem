import sys
import os


def resource_path(relative_path):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –≤–Ω—É—Ç—Ä–∏ .app"""
    if getattr(sys, 'frozen', False):  # –ï—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ –∫–∞–∫ PyInstaller .app
        base_path = sys._MEIPASS
    else:
        base_path = os.path.abspath(".")

    # üî• –£—á–∏—Ç—ã–≤–∞–µ–º macOS App Bundle (Contents/MacOS)
    if sys.platform == "darwin" and "Backup Manager.app" in base_path:
        base_path = os.path.join(base_path, "..", "..")

    return os.path.join(base_path, relative_path)


# ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backup_app –ü–ï–†–ï–î –∏–º–ø–æ—Ä—Ç–∞–º–∏
sys.path.append(resource_path("backup_app"))

from PyQt6.QtWidgets import QApplication
from backup_app.ui.main_window import MainWindow
from backup_app.config.settings import load_settings
from backup_app.logs.logger import log_info


def setup_app():
    """–ì–æ—Ç–æ–≤–∏—Ç –æ–∫—Ä—É–∂–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    base_dir = resource_path("backup_app")  # ‚úÖ –£–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–∞–ø–∫—É

    for folder in ["logs", "backups", "config"]:
        full_path = os.path.join(base_dir, folder)
        if not os.path.exists(full_path):
            os.makedirs(full_path)

    settings = load_settings()
    log_info("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")

    return settings


if __name__ == "__main__":
    settings = setup_app()

    app = QApplication(sys.argv)
    window = MainWindow()
    window.show()
    log_info("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ.")

    sys.exit(app.exec())
