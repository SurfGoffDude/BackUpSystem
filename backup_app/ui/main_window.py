from PyQt6.QtWidgets import QApplication, QMainWindow, QPushButton, QTextEdit, QVBoxLayout, QWidget
from backup_app.ui.settings_window import SettingsWindow
from backup_app.ui.widgets import DragDropWidget
from backup_app.backup.restore import restore_backup, find_latest_backup
from backup_app.backup.local_backup import create_backup
from backup_app.logs.logger import log_info, log_error
import sys
import os
from datetime import datetime


class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()

        self.setWindowTitle("Backup Manager")
        self.setGeometry(300, 200, 600, 400)

        self.selected_folder = None

        self.central_widget = QWidget()
        self.setCentralWidget(self.central_widget)

        self.log = QTextEdit()
        self.log.setReadOnly(True)

        self.drag_drop_widget = DragDropWidget(self)

        self.backup_button = QPushButton("üöÄ –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø")
        self.backup_button.setEnabled(False)
        self.backup_button.clicked.connect(self.create_backup)

        self.restore_button = QPushButton("üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å")
        self.restore_button.setEnabled(False)
        self.restore_button.clicked.connect(self.restore_backup)

        self.settings_button = QPushButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")  # üî• –í–µ—Ä–Ω—É–ª–∏ –∫–Ω–æ–ø–∫—É!
        self.settings_button.clicked.connect(self.open_settings)

        layout = QVBoxLayout()
        layout.addWidget(self.drag_drop_widget)
        layout.addWidget(self.backup_button)
        layout.addWidget(self.restore_button)
        layout.addWidget(self.settings_button)  # üî• –£–±–µ–¥–∏–ª–∏—Å—å, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –µ—Å—Ç—å!
        layout.addWidget(self.log)
        self.central_widget.setLayout(layout)

    def create_backup(self):
        if self.selected_folder:
            backup_path = create_backup(self.selected_folder)

            if backup_path:
                self.log.append(f"‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: {backup_path}")
            else:
                self.log.append("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—ç–∫–∞–ø–∞")
        else:
            self.log.append("‚ùå –û—à–∏–±–∫–∞: –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –∏–ª–∏ –ø–∞–ø–∫—É –¥–ª—è –±—ç–∫–∞–ø–∞")

    def restore_backup(self):
        if self.selected_folder:
            file_name = os.path.basename(self.selected_folder)
            backup_file = find_latest_backup(file_name)  # üîç –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é —Ñ–∞–π–ª–∞

            if not backup_file:
                self.log.append(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è! –§–∞–π–ª {file_name} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ backups/")
                return

            # üìÖ –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
            modified_time = os.path.getmtime(backup_file)
            formatted_date = datetime.fromtimestamp(modified_time).strftime("%Y-%m-%d_%H-%M-%S")

            restore_path = os.path.expanduser(f"~/Downloads/Restore/{formatted_date}")  # üî• –î–∞—Ç–∞ –≤ –∏–º–µ–Ω–∏ –ø–∞–ø–∫–∏
            os.makedirs(restore_path, exist_ok=True)  # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç

            restored_file = restore_backup(file_name, restore_path)  # üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º

            if restored_file:
                self.log.append(f"‚úÖ –§–∞–π–ª –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ {restore_path}")
                log_info(f"‚úÖ –§–∞–π–ª {file_name} –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ {restore_path}")
            else:
                self.log.append(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ backups/!")
                log_error(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {file_name}")
        else:
            self.log.append("‚ùå –û—à–∏–±–∫–∞: –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è")

    def open_settings(self):
        self.settings_window = SettingsWindow()
        self.settings_window.show()
